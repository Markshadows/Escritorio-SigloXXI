<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="metroPanel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>